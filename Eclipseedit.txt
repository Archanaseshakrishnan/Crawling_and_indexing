 <br>
<br> Understanding a Java Program
Java ProgrammingJava IDEs
Language Fundamentals 
<br>Navigate Getting Started topic: ( v • d • e )
 Installing Java on Your Computer
 Compiling programs
 Running Java programs
 Understanding a Java program
 Java IDEs

<br>
<br>A Java IDE (for Integrated Development Environment) is a software application which enables users to more easily write and debug Java programs. Many IDEs provide features like syntax highlighting and code completion, which help the user to code more easily.<br>
<br>
<br>



Eclipse on Ubuntu

<br>
<br>Eclipse is a Free and Open Source IDE, plus a developer tool framework that can be extended for a particular development need. IBM was behind its development, and it replaced IBM VisualAge tool. The idea was to create a standard look and feel that can be extended via plugins. The extensibility distinguishes Eclipse from other IDEs. Eclipse was also meant to compete with Microsoft Visual Studio tools. Microsoft tools give a standard way of developing code in the Microsoft world. Eclipse gives a similar standard way of developing code in the Java world, with a big success so far. With the online error checking only, coding can be sped up by at least 50% (coding does not include programming).<br>
<br>The goals for Eclipse are twofold:<br>
<br>Give a standard IDE for developing code
Give a starting point, and the same look and feel for all other more sophisticated tools built on Eclipse
<br>IBM's WSAD, and later IBM Rational Software Development Platform, are built on Eclipse.<br>
<br>Standard Eclipse features:<br>
<br>Standard window management (perspectives, views, browsers, explorers, ...)
Error checking as you type (immediate error indications, ...)
Help window as you type (type ., or <ctrl> space, ...)
Automatic build (changes in source code are automatically compiled, ...)
Built-in debugger (full featured GUI debugger)
Source code generation (getters and setters, ...)
Searches (for implementation, for references, ...)
Code refactoring (global reference update, ...)
Plugin-based architecture (ability to build tools that integrate seamlessly with the environment, and some other tools)
...
<br>More info: Eclipse and Plugincentral.
<br><br>
<br>